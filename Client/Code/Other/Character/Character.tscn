[gd_scene load_steps=16 format=3 uid="uid://b7b7a5vlbqden"]

[ext_resource type="Texture2D" uid="uid://c1mbipb6jmamn" path="res://Resource/Texture/Mouse/MouseSpriteSheet.png" id="1_sreby"]

[sub_resource type="GDScript" id="GDScript_h3hjh"]
script/source = "extends CharacterBody2D

const SPEED = 300.0
const JUMP_VELOCITY = -400.0

var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")
var direction
var anim_direction = 0

var ready_to_move : bool = true
const MOVEMENT_STATE_FUNCTIONS = [\"Set_Idle\", \"Set_Walk\", \"Set_Jump\", \"Set_Wait\", \"Set_Reel\"]



func _ready() -> void:
	$AnimationPlayer.play(\"idle_right\")

func _physics_process(_delta : float) -> void:
	# Add the gravity.
	if not is_on_floor(): velocity.y += gravity * _delta
	# Handle jump.
	if Input.is_action_just_pressed(\"JUMP\") and is_on_floor(): velocity.y = JUMP_VELOCITY
	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	direction = Input.get_axis(\"MOVE_LEFT\", \"MOVE_RIGHT\")
	if direction != 0: anim_direction = direction
	if direction: velocity.x = direction * SPEED
	else: velocity.x = move_toward(velocity.x, 0, SPEED)
	move_and_slide()
	
	if ready_to_move:
		if direction == 0: Set_Animation(0)
		else: Set_Animation(1)



func Set_Animation(animation : int) -> void:
	call(MOVEMENT_STATE_FUNCTIONS[animation])
	
func Set_Idle() -> void:
	if anim_direction > 0: $AnimationPlayer.play(\"idle_left\")
	else: $AnimationPlayer.play(\"idle_right\")
	
func Set_Walk() -> void:
	if anim_direction > 0: $AnimationPlayer.play(\"walk_left\")
	else: $AnimationPlayer.play(\"walk_right\")

#TODO add jump animations
func Set_Jump() -> void:
	if anim_direction > 0: $AnimationPlayer.play(\"jump_left\")
	else: $AnimationPlayer.play(\"jump_right\")

func Set_Wait() -> void:
	ready_to_move = false
	$AnimationPlayer.play(\"cast_line\")
	$AnimationPlayer.queue(\"wait\")

func Set_Reel() -> void:
	ready_to_move = false
	$AnimationPlayer.play(\"reel_line\")
	$AnimationPlayer.queue(\"reel_stagger\")

func Fishing_Animation_Complete():
	ready_to_move = true
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_qnji1"]
size = Vector2(8, 5)

[sub_resource type="Animation" id="Animation_rwcrv"]
resource_name = "cast_line"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.8, 0.9),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [32, 33, 34, 35, 36, 37, 38, 39]
}

[sub_resource type="Animation" id="Animation_c0usb"]
resource_name = "idle_left"
length = 3.2
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.4, 0.7, 1.1, 1.6, 2, 2.3, 2.7),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3, 4, 5, 6, 7]
}

[sub_resource type="Animation" id="Animation_i3i5l"]
resource_name = "idle_right"
length = 3.2
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.4, 0.7, 1, 1.6, 2, 2.3, 2.7),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [8, 9, 10, 11, 12, 13, 14, 15]
}

[sub_resource type="Animation" id="Animation_ddswl"]
resource_name = "reel_line"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.266667, 0.4, 0.533333, 0.766667, 0.9),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [48, 49, 50, 51, 52, 53, 54]
}

[sub_resource type="Animation" id="Animation_0w3ct"]
resource_name = "wait"
length = 4.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1.8),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [40, 41]
}

[sub_resource type="Animation" id="Animation_3dnrq"]
resource_name = "walk_left"
length = 1.6
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 0.8, 1, 1.2, 1.4),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [16, 17, 18, 19, 20, 21, 22, 23]
}

[sub_resource type="Animation" id="Animation_oiyby"]
resource_name = "walk_right"
length = 1.6
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.4, 0.6, 0.8, 1, 1.2, 1.4),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [24, 25, 26, 27, 28, 29, 30, 31]
}

[sub_resource type="Animation" id="Animation_m7lof"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}

[sub_resource type="Animation" id="Animation_vo155"]
resource_name = "reel_stagger"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [56, 57]
}

[sub_resource type="Animation" id="Animation_vkpet"]
resource_name = "jump_left"

[sub_resource type="Animation" id="Animation_avify"]
resource_name = "jump_right"

[sub_resource type="AnimationLibrary" id="AnimationLibrary_5mx13"]
_data = {
"RESET": SubResource("Animation_m7lof"),
"cast_line": SubResource("Animation_rwcrv"),
"idle_left": SubResource("Animation_c0usb"),
"idle_right": SubResource("Animation_i3i5l"),
"jump_left": SubResource("Animation_vkpet"),
"jump_right": SubResource("Animation_avify"),
"reel_line": SubResource("Animation_ddswl"),
"reel_stagger": SubResource("Animation_vo155"),
"wait": SubResource("Animation_0w3ct"),
"walk_left": SubResource("Animation_3dnrq"),
"walk_right": SubResource("Animation_oiyby")
}

[node name="Character" type="CharacterBody2D" groups=["Character"]]
script = SubResource("GDScript_h3hjh")

[node name="Sprite" type="Sprite2D" parent="."]
position = Vector2(7.10543e-15, -9)
scale = Vector2(0.625, 0.625)
texture = ExtResource("1_sreby")
hframes = 8
vframes = 8

[node name="Collision" type="CollisionShape2D" parent="."]
position = Vector2(0, -0.5)
shape = SubResource("RectangleShape2D_qnji1")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_5mx13")
}
