[gd_scene load_steps=11 format=3 uid="uid://ddo0exxeu7uxw"]

[ext_resource type="AudioStream" uid="uid://qjs1r60pp375" path="res://Resource/Audio/Sound/Reel.ogg" id="1_axuan"]
[ext_resource type="PackedScene" uid="uid://bujfjq43vuyk4" path="res://Code/Other/Widget/Basic/Decoration/Decoration.tscn" id="1_cxboc"]
[ext_resource type="AudioStream" uid="uid://r1aarrqmqnfd" path="res://Resource/Audio/Sound/Tension.ogg" id="2_8s4cv"]
[ext_resource type="Texture2D" uid="uid://jo2gvcb74o6t" path="res://Resource/Texture/Fish/Test1.png" id="2_m3gfm"]

[sub_resource type="GDScript" id="GDScript_ub5eq"]
script/source = "extends CanvasLayer

@export var _Colors : Gradient
var _Progress := 50.0
var _Bar_Velocity := 0.0
var _Fish : Fish
var _Fish_Target := 0.0
var _Fish_AI_Position := 0

func _ready() -> void:
	s_Sound.Play_Sound(\"Ding\")
	var _species = Species._Dictionary.keys()
	_Fish = Fish.Create(_species.pick_random())
	$\"Margin/Timer\".wait_time = 1.0 - (Species.Get_Speed(_Fish._Species) / 100.0)
	$\"Margin/HBox/Decoration/Margin/Node/Fish/Fish\".texture = load(Species.Get_Texture(_Fish._Species))
	Move_Fish()

func _process(_delta : float) -> void:
	#SCALE
	var _scale = s_Interface.Get_Scale()
	var _anchor = s_Interface.Get_Anchor()
	scale.x = _scale
	scale.y = _scale
	for _child in get_children():
		_child.anchor_right = _anchor
		_child.anchor_bottom = _anchor
	#BARS
	#_Progress = (sin(float(Time.get_ticks_usec()) / 1000000) + 1.0)*50
	$\"Margin/HBox/Decoration2/Margin/Progress\".value = _Progress
	$\"Margin/HBox/Decoration2/Margin/Progress\".modulate = _Colors.sample(_Progress/100)
	$\"Margin/HBox/Decoration/Margin/Node/Bar\".modulate = _Colors.sample(_Progress/100)

func _physics_process(_delta : float) -> void:
	#CONTROLS
	if (Input.is_action_pressed(\"INTERACT\")):
		_Bar_Velocity -= _delta * 60.0
		if (!$\"Margin/Reel\".playing): $\"Margin/Reel\".play()
	else: _Bar_Velocity += _delta * 60.0
	#BAR
	$\"Margin/HBox/Decoration/Margin/Node/Bar\".position.y = clamp($\"Margin/HBox/Decoration/Margin/Node/Bar\".position.y + _Bar_Velocity / 8.0, 0, 365)
	if ($\"Margin/HBox/Decoration/Margin/Node/Bar\".position.y >= 365.0 or $\"Margin/HBox/Decoration/Margin/Node/Bar\".position.y <= 0.0): _Bar_Velocity = 0.0
	#FISH
	$\"Margin/HBox/Decoration/Margin/Node/Fish\".position.y = lerp($\"Margin/HBox/Decoration/Margin/Node/Fish\".position.y, _Fish_Target, _delta / 2 * Species.Get_Speed(_Fish._Species))
	#PROGRESS
	if ($\"Margin/HBox/Decoration/Margin/Node/Bar\".position.y <= $\"Margin/HBox/Decoration/Margin/Node/Fish\".position.y + $\"Margin/HBox/Decoration/Margin/Node/Fish\".size.y / 2 and $\"Margin/HBox/Decoration/Margin/Node/Bar\".position.y + $\"Margin/HBox/Decoration/Margin/Node/Bar\".size.y - $\"Margin/HBox/Decoration/Margin/Node/Fish\".size.y / 2 >= $\"Margin/HBox/Decoration/Margin/Node/Fish\".position.y): _Progress += _delta * 10.0 / Species.Get_Defense(_Fish._Species)
	else:
		if (!$\"Margin/Tension\".playing): $\"Margin/Tension\".play()
		_Progress -= _delta * 16.0
	if (_Progress <= 0.0): Lose_Fish()
	elif (_Progress >= 100.0): Catch_Fish()

func _input(_event : InputEvent) -> void: if (_event.is_action_pressed(\"PAUSE\")): s_Interface.Add(\"Pause\", false)

func Return() -> void:
	s_Interface.Return()
	s_Scene.Get_Current().Stop_Fishing()

func Move_Fish() -> void:
	var _pattern = Species.Get_AI(_Fish._Species)
	var _power = Species.Get_Power(_Fish._Species) * 100.0
	var _direction = _pattern[_Fish_AI_Position]
	if (randi() % 4 == 0): _direction *= -1.0
	var _modifier = randf_range(0.8, 1.2)
	_Fish_AI_Position = posmod(_Fish_AI_Position + 1, _pattern.size())
	_Fish_Target = clamp(_Fish_Target + _direction * _power * _modifier, 0, 440.0)

func Lose_Fish() -> void:
	get_node(\"/root/Main/Scene/Character\").Fishing_Animation_Complete()
	Return()
	s_Sound.Play_Sound(\"Line Break\")

func Catch_Fish() -> void:
	Return()
	s_Scene.Get_Current().Add_Money(_Fish.Get_Price()) #TODO move this to the end of the catch animation
	s_Scene.Get_Current().Add_Fish(_Fish)
	s_Interface.Add(\"Catch\", false)
	s_Interface.Get_Current().Setup(_Fish)
"

[sub_resource type="Gradient" id="Gradient_6aqww"]
interpolation_mode = 2
offsets = PackedFloat32Array(0, 0.5, 1)
colors = PackedColorArray(0.795865, 0, 0.166209, 1, 0.975001, 0.718368, 2.31028e-06, 1, 0.165087, 0.694475, 0, 1)
metadata/_snap_enabled = true
metadata/_snap_count = 4

[sub_resource type="AudioStreamRandomizer" id="AudioStreamRandomizer_o8qdo"]
random_pitch = 1.05
random_volume_offset_db = 2.0
streams_count = 1
stream_0/stream = ExtResource("1_axuan")

[sub_resource type="AudioStreamRandomizer" id="AudioStreamRandomizer_cvwy7"]
random_pitch = 1.05
random_volume_offset_db = 2.0
streams_count = 1
stream_0/stream = ExtResource("2_8s4cv")

[sub_resource type="StyleBoxEmpty" id="StyleBoxEmpty_4jq5s"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_abpl3"]
bg_color = Color(1, 1, 1, 1)

[node name="Fishing" type="CanvasLayer"]
script = SubResource("GDScript_ub5eq")
_Colors = SubResource("Gradient_6aqww")

[node name="Margin" type="MarginContainer" parent="."]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_constants/margin_left = 0
theme_override_constants/margin_top = 0
theme_override_constants/margin_right = -250
theme_override_constants/margin_bottom = 0

[node name="Timer" type="Timer" parent="Margin"]
wait_time = 0.75
autostart = true

[node name="Reel" type="AudioStreamPlayer2D" parent="Margin"]
stream = SubResource("AudioStreamRandomizer_o8qdo")
volume_db = 10.0

[node name="Tension" type="AudioStreamPlayer2D" parent="Margin"]
stream = SubResource("AudioStreamRandomizer_cvwy7")

[node name="HBox" type="HBoxContainer" parent="Margin"]
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 4
theme_override_constants/separation = 2

[node name="Decoration" parent="Margin/HBox" instance=ExtResource("1_cxboc")]
custom_minimum_size = Vector2(70, 500)
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 4

[node name="Margin" type="MarginContainer" parent="Margin/HBox/Decoration"]
show_behind_parent = true
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
theme_override_constants/margin_left = 5
theme_override_constants/margin_top = 5
theme_override_constants/margin_right = 5
theme_override_constants/margin_bottom = 5

[node name="Color" type="ColorRect" parent="Margin/HBox/Decoration/Margin"]
layout_mode = 2
mouse_filter = 2
color = Color(0.4, 0.4, 0.4, 0.501961)

[node name="Node" type="Control" parent="Margin/HBox/Decoration/Margin"]
layout_mode = 2

[node name="Bar" type="ColorRect" parent="Margin/HBox/Decoration/Margin/Node"]
custom_minimum_size = Vector2(0, 100)
layout_mode = 0
offset_top = 365.0
offset_right = 60.0
offset_bottom = 490.0
size_flags_vertical = 4

[node name="Fish" type="MarginContainer" parent="Margin/HBox/Decoration/Margin/Node"]
custom_minimum_size = Vector2(60, 60)
layout_mode = 0
offset_top = 430.0
offset_right = 60.0
offset_bottom = 490.0

[node name="Fish" type="TextureRect" parent="Margin/HBox/Decoration/Margin/Node/Fish"]
modulate = Color(100, 100, 100, 1)
texture_filter = 2
custom_minimum_size = Vector2(40, 40)
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 4
texture = ExtResource("2_m3gfm")
expand_mode = 1
stretch_mode = 4

[node name="Decoration2" parent="Margin/HBox" instance=ExtResource("1_cxboc")]
custom_minimum_size = Vector2(40, 500)
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 4

[node name="Margin" type="MarginContainer" parent="Margin/HBox/Decoration2"]
show_behind_parent = true
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
theme_override_constants/margin_left = 5
theme_override_constants/margin_top = 5
theme_override_constants/margin_right = 5
theme_override_constants/margin_bottom = 5

[node name="Color" type="ColorRect" parent="Margin/HBox/Decoration2/Margin"]
layout_mode = 2
mouse_filter = 2
color = Color(0.4, 0.4, 0.4, 0.501961)

[node name="Progress" type="ProgressBar" parent="Margin/HBox/Decoration2/Margin"]
layout_mode = 2
size_flags_vertical = 1
theme_override_styles/background = SubResource("StyleBoxEmpty_4jq5s")
theme_override_styles/fill = SubResource("StyleBoxFlat_abpl3")
value = 25.0
fill_mode = 3
show_percentage = false

[connection signal="timeout" from="Margin/Timer" to="." method="Move_Fish"]
