[gd_scene load_steps=27 format=3 uid="uid://isaqp1as5awk"]

[ext_resource type="Texture2D" uid="uid://dg78ujxd7d1x4" path="res://Resource/Texture/Game/WorldForeground.png" id="1_8dohq"]
[ext_resource type="PackedScene" uid="uid://b7b7a5vlbqden" path="res://Code/Other/Character/Character.tscn" id="1_c47od"]
[ext_resource type="Texture2D" uid="uid://dgujymthln2nu" path="res://Resource/Texture/Game/WorldBackground1.png" id="1_gkobv"]
[ext_resource type="Texture2D" uid="uid://b5ybbvf5bf4dh" path="res://Resource/Texture/Game/WorldBackground5.png" id="1_h1stu"]
[ext_resource type="AudioStream" uid="uid://ctimwtwkhbgt0" path="res://Resource/Audio/Ambient/Rain.ogg" id="1_q57q4"]
[ext_resource type="PackedScene" uid="uid://bhlvkit3rx2d3" path="res://Code/Other/Zone/Zone.tscn" id="2_05tr2"]
[ext_resource type="AudioStream" uid="uid://doh4tvofa2f12" path="res://Resource/Audio/Ambient/Wind.ogg" id="2_8knr8"]
[ext_resource type="Texture2D" uid="uid://1kv7p6fnsdg3" path="res://Resource/Texture/Game/WorldBackground2.png" id="2_raqer"]
[ext_resource type="AudioStream" uid="uid://ducbrrtaqm0hg" path="res://Resource/Audio/Ambient/Cricket.ogg" id="3_dot2y"]
[ext_resource type="Texture2D" uid="uid://cregirrygbkxr" path="res://Resource/Texture/Sky1.png" id="9_uhpu6"]
[ext_resource type="Texture2D" uid="uid://dm4vwdw0p7mns" path="res://Resource/Texture/Sky2.png" id="10_y3ati"]
[ext_resource type="Texture2D" uid="uid://b72fa6kdl2rt5" path="res://Resource/Texture/Space2.png" id="11_kc8jd"]
[ext_resource type="Texture2D" uid="uid://5bougnw5acme" path="res://Resource/Texture/Space1.png" id="12_tkgnc"]

[sub_resource type="GDScript" id="GDScript_fmrx4"]
script/source = "extends Node2D

var _Savefile : s_Config_File
var _Money := 0.0
var _Journal := {}
var _Licenses := [2, 0, 0, 0, 0] #[small, medium, large, huge], 0 = locked, 1 = unlocked, 2 = unlocked and equipped
var _Upgrades := [0, 0, 0] #[reel, rod, bait], number is the upgrade level
const MAX_UPGRADE_LEVELS := [3, 3, 3] #[reel, rod, bait]

func Setup(_arguments : Array) -> void:
	s_Sound.Play_Music(\"Game\", 1.0)
	#s_Sound.Play_Ambient(\"Wind\", 1.0)
	$\"Zone_Fishing\"._Function = Start_Fishing
	$\"Zone_Shop\"._Function = Start_Shop
	_Savefile = s_Filesystem.Get_Config_File(\"Save/Savefile.txt\")
	#_Savefile = s_Filesystem.Get_Config_File(\"Save/Savefile\", \"THE_ENCRYPT_KEEPER_2024\")
	_Money = _Savefile.Get(\"SAVE\", \"MONEY\", _Money)
	_Journal = _Savefile.Get(\"SAVE\", \"JOURNAL\", _Journal)
	_Licenses = _Savefile.Get(\"SAVE\", \"LICENSES\", _Licenses)
	_Upgrades = _Savefile.Get(\"SAVE\", \"UPGRADES\", _Upgrades)
	s_Interface.Switch(\"Nothing\")
	s_Interface.Get_Current().Update_Money()

#func _input(event: InputEvent) -> void: print(event)

func _process(_delta : float) -> void:
	#CLOUDS
	$\"ParallaxBackground/ParallaxLayer3\".motion_offset.x += (_delta * 2.0) + (_delta * 10.0 * s_Global._Windy)
	#SKY COLOR
	$\"Weather/Rain\".color = s_Global._Gradient.sample(s_Global._Time / 24.0)
	$\"Water\".modulate = s_Global._Gradient.sample(s_Global._Time / 24.0)
	$\"Canvas/Color\".color = s_Global._Gradient.sample(s_Global._Time / 24.0)
	$\"Canvas/Color\".color.a = s_Global._Gradient_Transparent.sample(s_Global._Time / 24.0).a
	$\"ParallaxBackground/ParallaxLayer/Sprite2D\".modulate = s_Global._Gradient.sample(s_Global._Time / 24.0)
	$\"ParallaxBackground/ParallaxLayer2/Sprite2D\".modulate = s_Global._Gradient.sample(s_Global._Time / 24.0).lightened(0.66)
	$\"Character/Camera/Catch_Backgrounds/Sky2\".self_modulate = s_Global._Gradient.sample(s_Global._Time / 24.0)
	$\"Character/Camera/Catch_Backgrounds/Space2\".self_modulate = s_Global._Gradient.sample(s_Global._Time / 24.0)

func Start_Shop() -> void: if (s_Interface.Get_Current().name == \"Nothing\" and $\"Timer\".is_stopped()): s_Interface.Add(\"Shop\", false)
func Start_Fishing() -> void: if (s_Interface.Get_Current().name == \"Nothing\" and $\"Timer\".is_stopped()): s_Interface.Add(\"Waiting\", false)
func Stop_Fishing() -> void: $\"Timer\".start()
func Get_Upgrade_Level(_upgrade : int) -> int: return _Upgrades[_upgrade]

func Add_Money(_price : float) -> void:
	var _effect = load(\"res://Code/Other/Effect/Money.tscn\").instantiate()
	_effect.Setup(_price)
	_Money += _price
	_Money = round(_Money * pow(10.0, 2)) / pow(10.0, 2)
	_Savefile.Set(\"SAVE\", \"MONEY\", _Money)
	_Savefile.Save()
	for interface in s_Interface._Focused_Interfaces:
		if interface.has_method(\"Update_Money\"):
			interface.Update_Money()
			interface.Add_Effect(_effect)

func Add_Fish(_fish : Fish) -> void:
	if (!_Journal.has(_fish._Species)):
		_Journal[_fish._Species] = [_fish.Get_Size(), 1] #size, number caught
		s_Sound.Play_Sound(\"Ding\")
	else: _Journal[_fish._Species] = [max(_Journal[_fish._Species][0], _fish.Get_Size()), _Journal[_fish._Species][1] + 1]
	_Savefile.Set(\"SAVE\", \"JOURNAL\", _Journal)
	_Savefile.Save()

func Unlock_License(_license : int, _price : float) -> void:
	var license = _license - 1 #so that _license can mean license 1 while in index 0
	if _Licenses[license] == 0: _Licenses[license] = 2
	Set_Active_License(license)
	Add_Money(-_price)
	_Savefile.Set(\"SAVE\", \"LICENSES\", _Licenses)
	_Savefile.Save()

func Set_Active_License(_license : int) -> void:
	var license = _license - 1 #so that _license can mean license 1 while in index 0
	if _Licenses[license] != 0:
		for current_license in _Licenses: if current_license == 2: current_license = 1
		_Licenses[license] = 2
		_Savefile.Set(\"SAVE\", \"LICENSES\", _Licenses)
		_Savefile.Save()

##Returns true if the upgrade has reached its max level, false if it has not
func Unlock_Upgrade(_upgrade : int, _price : float) -> bool:
	if MAX_UPGRADE_LEVELS[_upgrade] > _Upgrades[_upgrade]: _Upgrades[_upgrade] = _Upgrades[_upgrade] + 1
	Add_Money(-_price)
	return Is_Upgrade_Max_Level(_upgrade)

func Is_Upgrade_Max_Level(_upgrade : int) -> bool:
	if _Upgrades[_upgrade] == MAX_UPGRADE_LEVELS[_upgrade]: return true
	else: return false

func Play_Sky_Zoom_Animation() -> void:
	var visible_area = get_viewport_rect().size / 7
	var image_orig_dimensions = $Character/Camera/Catch_Backgrounds/Sky1.texture.get_size()
	var image_scale = Vector2(visible_area.x / image_orig_dimensions.x, visible_area.y / image_orig_dimensions.y)
	var image_new_scale : float
	if image_scale.x > image_scale.y: image_new_scale = image_scale.x
	else: image_new_scale = image_scale.y
	
	var zoom_sky = $Animation.get_animation(\"zoom_sky\")
	zoom_sky.track_set_key_value(1, 1, Vector2(image_new_scale, image_new_scale))
	zoom_sky.track_set_key_value(4, 1, Vector2(image_new_scale, image_new_scale))
	$Animation.play(\"zoom_sky\")

func Play_Space_Zoom_Animation() -> void:
#	var visible_area = get_viewport_rect().size / 4
#	var image_orig_dimensions = $Character/Catch_Backgrounds/Sky.texture.get_size()
#	var image_scale = Vector2(visible_area.x / image_orig_dimensions.x, visible_area.y / image_orig_dimensions.y)
#	var image_new_scale : float
#	if image_scale.x > image_scale.y: image_new_scale = image_scale.x + 0.01
#	else: image_new_scale = image_scale.y + 0.01
#	
#	var zoom_space = $AnimationPlayer.get_animation(\"zoom_space\")
#	zoom_space.track_set_key_value(4, 1, Vector2(image_new_scale, image_new_scale))
	
	var visible_area = get_viewport_rect().size / 7
	var image_orig_dimensions = $Character/Camera/Catch_Backgrounds/Space1.texture.get_size()
	var image_scale = Vector2(visible_area.x / image_orig_dimensions.x, visible_area.y / image_orig_dimensions.y)
	var image_new_scale : float
	if image_scale.x > image_scale.y: image_new_scale = image_scale.x
	else: image_new_scale = image_scale.y
	
	var zoom_space = $Animation.get_animation(\"zoom_space\")
	zoom_space.track_set_key_value(1, 1, Vector2(image_new_scale, image_new_scale))
	$Animation.play(\"zoom_space\")

func Reset_Zoom() -> void: $Animation.play(\"RESET\")
"

[sub_resource type="Gradient" id="Gradient_cwpl2"]
offsets = PackedFloat32Array(0, 0.8, 1)
colors = PackedColorArray(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)
metadata/_snap_enabled = true
metadata/_snap_count = 5

[sub_resource type="Gradient" id="Gradient_hq7ua"]
offsets = PackedFloat32Array(0.00892857, 1)
colors = PackedColorArray(1, 1, 1, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_8gw28"]
gradient = SubResource("Gradient_hq7ua")

[sub_resource type="RectangleShape2D" id="RectangleShape2D_73eib"]
size = Vector2(18.5, 20)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_vp8en"]
size = Vector2(57, 20)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_vyspl"]
size = Vector2(700, 55)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_60r5v"]
size = Vector2(156, 338)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_dfjl3"]
size = Vector2(158, 338)

[sub_resource type="Animation" id="Animation_e7xsv"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Character/Camera/Catch_Backgrounds/Sky1:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Character/Camera/Catch_Backgrounds/Space1:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Character/Camera/Catch_Backgrounds/Sky2:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Character/Camera/Catch_Backgrounds/Space2:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}

[sub_resource type="Animation" id="Animation_5f20w"]
resource_name = "zoom_sky"
length = 2.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Character/Camera/Catch_Backgrounds/Sky1:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0.8, 1.5),
"transitions": PackedFloat32Array(2.25, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Character/Camera/Catch_Backgrounds/Sky1:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0.8, 1.5),
"transitions": PackedFloat32Array(2.25, 1),
"update": 0,
"values": [Vector2(10, 10), Vector2(50, 50)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Character/Camera/Catch_Backgrounds/Sky1:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0.8, 1.5),
"transitions": PackedFloat32Array(2.25, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Character/Camera/Catch_Backgrounds/Sky2:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0.8, 1.5),
"transitions": PackedFloat32Array(2.25, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Character/Camera/Catch_Backgrounds/Sky2:scale")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0.8, 1.5),
"transitions": PackedFloat32Array(2.25, 1),
"update": 0,
"values": [Vector2(10, 10), Vector2(50, 50)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Character/Camera/Catch_Backgrounds/Sky2:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0.8, 1.5),
"transitions": PackedFloat32Array(2.25, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("Character/Camera/Catch_Backgrounds/Space1:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("Character/Camera/Catch_Backgrounds/Space2:modulate")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}

[sub_resource type="Animation" id="Animation_em5m0"]
resource_name = "zoom_space"
length = 2.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Character/Camera/Catch_Backgrounds/Space1:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0.8, 1.5),
"transitions": PackedFloat32Array(2.25, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Character/Camera/Catch_Backgrounds/Space1:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0.8, 1.5),
"transitions": PackedFloat32Array(2.25, 1),
"update": 0,
"values": [Vector2(10, 10), Vector2(5, 5)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Character/Camera/Catch_Backgrounds/Space1:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0.8, 1.5),
"transitions": PackedFloat32Array(2.25, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Character/Camera/Catch_Backgrounds/Space2:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0.8, 1.5),
"transitions": PackedFloat32Array(2.25, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Character/Camera/Catch_Backgrounds/Space2:scale")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0.8, 1.5),
"transitions": PackedFloat32Array(2.25, 1),
"update": 0,
"values": [Vector2(10, 10), Vector2(5, 5)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Character/Camera/Catch_Backgrounds/Space2:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0.8, 1.5),
"transitions": PackedFloat32Array(2.25, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 0)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("Character/Camera/Catch_Backgrounds/Sky1:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("Character/Camera/Catch_Backgrounds/Sky2:modulate")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_mrbxs"]
_data = {
"RESET": SubResource("Animation_e7xsv"),
"zoom_sky": SubResource("Animation_5f20w"),
"zoom_space": SubResource("Animation_em5m0")
}

[node name="Scene" type="Node2D"]
script = SubResource("GDScript_fmrx4")

[node name="Timer" type="Timer" parent="."]
wait_time = 0.2
one_shot = true
autostart = true

[node name="Weather" type="Node2D" parent="."]

[node name="Rain" type="CPUParticles2D" parent="Weather"]
self_modulate = Color(0.477, 0.612, 0.752, 0.75)
z_index = 1
position = Vector2(111, -146)
emitting = false
amount = 200
lifetime = 1.8
randomness = 1.0
lifetime_randomness = 0.2
emission_shape = 3
emission_rect_extents = Vector2(300, 1)
direction = Vector2(0, 100)
spread = 5.0
gravity = Vector2(0, 0)
initial_velocity_min = 200.0
initial_velocity_max = 200.0
scale_amount_min = 1.25
scale_amount_max = 1.75
color_ramp = SubResource("Gradient_cwpl2")

[node name="Sound_Rain" type="AudioStreamPlayer" parent="Weather"]
stream = ExtResource("1_q57q4")
autoplay = true
bus = &"Ambient"
parameters/looping = true

[node name="Sound_Wind" type="AudioStreamPlayer" parent="Weather"]
stream = ExtResource("2_8knr8")
autoplay = true
bus = &"Ambient"
parameters/looping = true

[node name="Sound_Cricket" type="AudioStreamPlayer2D" parent="Weather"]
position = Vector2(284, 115)
stream = ExtResource("3_dot2y")
autoplay = true
max_distance = 300.0
attenuation = 0.659754
bus = &"Ambient"
parameters/looping = true

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground"]
motion_scale = Vector2(0.1, 0.1)
motion_offset = Vector2(0, -10)
motion_mirroring = Vector2(308, 0)

[node name="Sprite2D" type="Sprite2D" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2(154, 79)
texture = ExtResource("1_h1stu")

[node name="ParallaxLayer3" type="ParallaxLayer" parent="ParallaxBackground"]
motion_scale = Vector2(0.2, 0.2)
motion_mirroring = Vector2(308, 0)

[node name="Sprite2D" type="Sprite2D" parent="ParallaxBackground/ParallaxLayer3"]
position = Vector2(154, 79)
texture = ExtResource("1_gkobv")

[node name="ParallaxLayer2" type="ParallaxLayer" parent="ParallaxBackground"]
motion_scale = Vector2(0.5, 0.5)
motion_offset = Vector2(10, -10)
motion_mirroring = Vector2(308, 0)

[node name="Sprite2D" type="Sprite2D" parent="ParallaxBackground/ParallaxLayer2"]
position = Vector2(154, 96)
texture = ExtResource("2_raqer")

[node name="Canvas" type="CanvasLayer" parent="."]
layer = 0

[node name="Color" type="ColorRect" parent="Canvas"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(1, 1, 1, 0)

[node name="Water" type="Sprite2D" parent="."]
self_modulate = Color(0.758192, 0.758192, 0.758192, 1)
position = Vector2(314, 137)
scale = Vector2(1.72, 1)
texture = SubResource("GradientTexture2D_8gw28")

[node name="World" type="Sprite2D" parent="."]
position = Vector2(106, -45)
texture = ExtResource("1_8dohq")

[node name="Character" parent="." instance=ExtResource("1_c47od")]
position = Vector2(65, 130)

[node name="Camera" type="Camera2D" parent="Character"]
offset = Vector2(0, -50)
zoom = Vector2(7, 7)
limit_left = -160
limit_smoothed = true
position_smoothing_enabled = true
position_smoothing_speed = 4.0

[node name="Catch_Backgrounds" type="Node2D" parent="Character/Camera"]
position = Vector2(0, -50)

[node name="Sky2" type="Sprite2D" parent="Character/Camera/Catch_Backgrounds"]
modulate = Color(1, 1, 1, 0)
scale = Vector2(10, 10)
texture = ExtResource("10_y3ati")

[node name="Sky1" type="Sprite2D" parent="Character/Camera/Catch_Backgrounds"]
modulate = Color(1, 1, 1, 0)
texture_filter = 1
scale = Vector2(10, 10)
texture = ExtResource("9_uhpu6")

[node name="Space2" type="Sprite2D" parent="Character/Camera/Catch_Backgrounds"]
modulate = Color(1, 1, 1, 0)
scale = Vector2(10, 10)
texture = ExtResource("11_kc8jd")

[node name="Space1" type="Sprite2D" parent="Character/Camera/Catch_Backgrounds"]
modulate = Color(1, 1, 1, 0)
texture_filter = 1
scale = Vector2(10, 10)
texture = ExtResource("12_tkgnc")

[node name="Zone_Fishing" parent="." instance=ExtResource("2_05tr2")]
position = Vector2(0, 2)

[node name="Collision" parent="Zone_Fishing" index="0"]
position = Vector2(254.25, 120)
shape = SubResource("RectangleShape2D_73eib")

[node name="Zone_Shop" parent="." instance=ExtResource("2_05tr2")]
position = Vector2(-210, 0)

[node name="Collision" parent="Zone_Shop" index="0"]
position = Vector2(229, 121)
shape = SubResource("RectangleShape2D_vp8en")

[node name="StaticBody2D" type="StaticBody2D" parent="."]
position = Vector2(-45, -13)

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D"]
position = Vector2(111, 172)
shape = SubResource("RectangleShape2D_vyspl")

[node name="CollisionShape2D2" type="CollisionShape2D" parent="StaticBody2D"]
position = Vector2(384, 29)
shape = SubResource("RectangleShape2D_60r5v")

[node name="CollisionShape2D3" type="CollisionShape2D" parent="StaticBody2D"]
position = Vector2(-158, 31)
shape = SubResource("RectangleShape2D_dfjl3")

[node name="Animation" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_mrbxs")
}

[editable path="Zone_Fishing"]
[editable path="Zone_Shop"]
